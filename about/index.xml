<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>简介 on Venus中间件</title>
    <link>http://venusplus.cn/about/</link>
    <description>Recent content in 简介 on Venus中间件</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>2017 Venus Plus出品</copyright>
    <lastBuildDate>Wed, 22 Feb 2017 04:20:49 +0000</lastBuildDate>
    
	<atom:link href="http://venusplus.cn/about/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HTTP API</title>
      <link>http://venusplus.cn/about/http-api/</link>
      <pubDate>Mon, 30 Oct 2017 08:22:29 +0000</pubDate>
      
      <guid>http://venusplus.cn/about/http-api/</guid>
      <description>Basement File 的 API 完全居于 HTTP 提供，你可以使用任何你喜欢的语言使用我们的服务。对于 Java和 Node 的用户，我们强烈建议使用已封装好的 SDK.
 文件上传接口  POST /api/1.0/files/:env/:targetPath?fileName=1.jpg&amp;amp;targetEnv=dev
  请求参数    Name In Type Required Default Description     env path String 是 无 文件上传的目标环境，详见部署环境说明   targetPath path String 否 无 文件上传后存储的自定义路径，如果该值不传则返回随机路径的URL，如果传入该值则返回该值对应的URL   fileName query String 是 无 上传的文件的文件名，必填   targetEnv query String 是 无 使用的服务环境。DEV: 开发环境使用，PROD: 生产环境使用   content-type header String 是 application/octet-stream 必须为application/octet-stream   x-base-id header String 是 无 basement.</description>
    </item>
    
    <item>
      <title>JAVA SDK</title>
      <link>http://venusplus.cn/about/java-sdk/</link>
      <pubDate>Fri, 15 Sep 2017 03:27:25 +0000</pubDate>
      
      <guid>http://venusplus.cn/about/java-sdk/</guid>
      <description>配置客户端  Sofa应用  总pom配置 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.alipay.basement&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;basement-base&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.4.6&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.alipay.basement&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;basement-file&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.4.6&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.httpcomponents&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;httpcore&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;4.4.1&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.httpcomponents&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;httpclient&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;4.4.1&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.httpcomponents&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;httpmime&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;4.4&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.commons&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;commons-codec&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.3&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.google.code.gson&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;gson&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.7&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.ant&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;ant&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.9.7&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.commons&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;com.springsource.org.apache.commons.io&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.4.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.commons&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;com.springsource.org.apache.commons.lang&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.5.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.commons&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;com.springsource.org.apache.commons.logging&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.1.1&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.commons&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;commons-compress&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.12&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.projectlombok&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;lombok&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.12.6&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt;   ace pom添加以上jar包  log4j日志配置 &amp;lt;!</description>
    </item>
    
    <item>
      <title>CLI</title>
      <link>http://venusplus.cn/about/cli/</link>
      <pubDate>Tue, 29 Aug 2017 14:25:33 +0000</pubDate>
      
      <guid>http://venusplus.cn/about/cli/</guid>
      <description>命令行工具，本地安装后，输入密钥启动 basement 工具
支持 js-sdk 的接口调用，可以在命令下输入 file 的上传命令等，例如
开始检测启动配置, 请稍候 启动配置检测通过, 启动成功! 当前版本 v2.5.5 连接至 https://basement-api.alipay.com 请输入 .help(包含点号) 获取帮助 &amp;gt; file.upload(&#39;file_sample&#39;, new Buffer(&#39;content&#39;)); // 直接上传 Buffer { ETag: &#39;9A0364B9E99BB480DD25E1F0284C8555&#39;, name: &#39;file_sample&#39;, size: 7, type: &#39;&#39;, url: &#39;http://alipay-rmsdeploy-image.cn-hangzhou.alipay.aliyun-inc.com/{accountName}/file_sample&#39; } &amp;gt; file.upload(&#39;file_sample&#39;, &#39;path_to_file_path&#39;); // 按文件路径上传  详细使用说明见 http://web.npm.alibaba-inc.com/package/@alipay/basement-cli</description>
    </item>
    
    <item>
      <title>快速上手</title>
      <link>http://venusplus.cn/about/start/</link>
      <pubDate>Tue, 29 Aug 2017 14:02:17 +0000</pubDate>
      
      <guid>http://venusplus.cn/about/start/</guid>
      <description>使用服务 在使用服务之前，请确保已拥有basement的产品并创建服务密钥
  具体查看 新人上手
 使用限制  单个文件大小必须在500M之内, 如超过，请 @慧玄，说明业务场景   Node SDK  安装 basement sdk tnpm i @alipay/basement co urllib &amp;ndash;save   调用示例 const Basement = require(&amp;rsquo;@alipay/basement&amp;rsquo;); const urllib = require(&amp;lsquo;urllib&amp;rsquo;); const co = require(&amp;lsquo;co&amp;rsquo;);
const basement = new Basement({ appId: &amp;lsquo;5885827c9a7934057979d4db&amp;rsquo;, masterKey: &amp;lsquo;1csgxwXVuI_t05UK_EheY7NN&amp;rsquo;, urllib, endpoint: &amp;lsquo;http://basement-api.stable.alipay.net&#39; }); co(function* () { const ret = yield basement.file.upload(&amp;lsquo;1.txt&amp;rsquo;, new Buffer(&amp;lsquo;test content&amp;rsquo;)); console.log(ret) }).catch(e =&amp;gt; { console.</description>
    </item>
    
    <item>
      <title>文件上传</title>
      <link>http://venusplus.cn/about/env-intro/</link>
      <pubDate>Tue, 29 Aug 2017 08:12:48 +0000</pubDate>
      
      <guid>http://venusplus.cn/about/env-intro/</guid>
      <description>Basement File 提供了不同环境的文件上传方案，你可以根据你的不同需求将文件上传到不同的存储模式中:
 如果你需要将文件提供给公网的用户访问，并还想有压不垮的性能。那么你可以通过 Basement File将文件上传到 CDN，百万+ qps 不再是梦。 如果你有一些内部的设计文档这种不能对外公开的资料。那么你可以通过 Basement File 将文件上传到办公网环境，这时候文件只能在公司内部访问，不会有安全风险的问题。 如果你有一些很私密的文件，只能给授权用户访问。那么你可以通过 Basement File 将文件上传到私有的环境中，这时候只能通过我们提供的接口才能获取到限时的访问链接。   上传文件到公网 CDN  Node 用户 ... yield fileClient.upload(&#39;1.txt&#39;, new Buffer(&#39;test content&#39;), { mode: &#39;public&#39; }); ...  返回值
{ ETag: &#39;9473FDD0D880A43C21B7778D34872157&#39;, name: &#39;1.txt&#39;, size: 12, type: &#39;txt&#39;, url: &#39;https://os.alipayobjects.com/lanjue-test/07e85cc3-0392-4e5f-b303-6ad80c511ec7/1.txt&#39; }   Java 用户 final StringReq stringReq = new StringReq(&amp;quot;1.txt&amp;quot;, &amp;quot;test content&amp;quot;, FileEnv.PUBLIC, &amp;quot;shouna.ysn&amp;quot;); final FileMetadata fileMetadata = fileClient.upload(stringReq);  返回值</description>
    </item>
    
    <item>
      <title>文件存储环境说明</title>
      <link>http://venusplus.cn/about/ni933p/</link>
      <pubDate>Wed, 02 Aug 2017 13:36:09 +0000</pubDate>
      
      <guid>http://venusplus.cn/about/ni933p/</guid>
      <description>Basement File 底层存储完全基于 OSS ,通过不同的网络和 endpoint 划分出了如下几个环境:
 PUBLIC(公网环境):  通过 CDN 进行访问，QPS 可达百万级，适合需要把文件放到公网的所有用户。
  INTERNAL(公司内网环境):  直接访问 OSS ,文件只能在内网中访问，其他环境无法访问到。
  PRIVATE(私有文件):  使用这种方式存储的文件不能直接访问，必须通过 SDK 提供的授权接口获取有时效性的授权链接后才可以访问。
  STRICT(防盗链环境):  使用这种方式上传的文件可以在 CDN 上配置防盗链的规则，一般不太使用。
  NET(沙箱环境)  沙箱环境，主要服务于公司的沙箱环境中的系统，不能直接用于生产业务。
    服务 endpoint 配置说明  Basement File 是服务型应用，不区分 stable 环境和生产环境，所以服务统一使用 Basement 线上环境 endpoint，然后通过 targetEnv 参数区分线上或线下环境。</description>
    </item>
    
    <item>
      <title>Egg/Chair 插件</title>
      <link>http://venusplus.cn/about/egg-plugin/</link>
      <pubDate>Fri, 12 May 2017 08:37:03 +0000</pubDate>
      
      <guid>http://venusplus.cn/about/egg-plugin/</guid>
      <description>我们强烈建议 Egg/Chair 系统的用户直接使用 Basement File 的插件。通过插件可以简单地和 Egg/Chair 框架高度整合。
 配置插件  安装依赖 tnpm i @alipay/egg-basement &amp;ndash;save   开启插件  config/plugin.js
 exports.basement = { enable: true, package: &amp;rsquo;@alipay/egg-basement&amp;rsquo;, };   配置插件行为  打开: config/config.{env}.js
 exports.basement = { // 单实例配置 client: { appId: &amp;lsquo;your app id&amp;rsquo;, masterKey: &amp;lsquo;your master key&amp;rsquo;, env: &amp;lsquo;prod&amp;rsquo;, // 默认不用设置，如果是非线上环境使用线上环境的 basement 服务，需要设置成 prod // encryptPassword: false, // masterKey 是否加密，默认 false },
// 多实例配置 // clients: { // instance: { // appId: &amp;lsquo;your app id&amp;rsquo;, // masterKey: &amp;lsquo;your master key&amp;rsquo;, // env: &amp;lsquo;prod&amp;rsquo;, // 默认不用设置，如果是非线上环境使用线上环境的 basement 服务，需要设置成 prod // // encryptPassword: false, // masterKey 是否加密，默认 false // }, // },</description>
    </item>
    
    <item>
      <title>Bucket 对应关系</title>
      <link>http://venusplus.cn/about/bucket-relation/</link>
      <pubDate>Tue, 18 Apr 2017 04:24:04 +0000</pubDate>
      
      <guid>http://venusplus.cn/about/bucket-relation/</guid>
      <description>静态文件    - alipay-rmsdeploy-image-pub alipay-rmsdeploy-image     办公网地址 https://os.alipayobjects.com / https://zos.alipayobjects.com https://private-alipayobjects.alipay.com / http://alipay-rmsdeploy-image.cn-hangzhou.alipay.aliyun-inc.com   生产网地址 http://alipay-rmsdeploy-image-pub.cn-hangzhou.alipay-pub.aliyun-inc.com http://alipay-rmsdeploy-image.cn-hangzhou.alipay-internal.aliyun-inc.com   CDN地址 https://os.alipayobjects.com / https://zos.alipayobjects.com -   回源地址 http://alipay-rmsdeploy-image-pub.cn-hangzhou.alipay-pub.aliyun-inc.com -   PSP绑定应用 rmsdeploy rmsdeploy   备注 file/rmsportal上传到公网的文件 file/rmsportal上传到internal的文件     静态资源    - alipay-rmsdeploy-assets-pub alipay-rmsdeploy-assets-pre     办公网地址 https://as.alipayobjects.com / https://a.alipayobjects.com https://as.alipayobjects.com / https://a.alipayobjects.com (绑host)   生产网地址 http://alipay-rmsdeploy-assets-pub.</description>
    </item>
    
    <item>
      <title>服务环境和文件部署环境</title>
      <link>http://venusplus.cn/about/env-targetenv/</link>
      <pubDate>Mon, 17 Apr 2017 07:57:11 +0000</pubDate>
      
      <guid>http://venusplus.cn/about/env-targetenv/</guid>
      <description>接口中 env 和 targetEnv 的区别  targetEnv Basement File 是服务型应用，只有线上服务一个入口，但是Basement File 对环境做了逻辑划分。使用方在不同环境使用的时候可以通过 targetEnv 来使用不同的逻辑环境。详情如下:
   使用方环境 Client Endpoint 设置 targetEnv 设置     用于开发测试 https://basement-gzone.alipay.com DEV   部署在线上生产环境 http://basement-pool.${domain_name} PROD   部署在线下的稳定服务 https://basement-gzone.alipay.com PROD     env(文件存储环境) 业务方在上传文件的时候会有不同的需求，有些用户希望文件对公网所有用户开放，有些用户希望文件只能在内部访问(敏感文件)，所以，Basement File 通过 env 参数划分出了不同的环境，详细说明见下文:
 文件存储环境说明 Basement File 底层存储完全基于 OSS ,通过不同的网络和 endpoint 划分出了如下几个环境:
 PUBLIC(公网环境):  通过 CDN 进行访问，QPS 可达百万级，适合需要把文件放到公网的所有用户。
  INTERNAL(公司内网环境):  直接访问 OSS ,文件只能在内网中访问，其他环境无法访问到。</description>
    </item>
    
    <item>
      <title>图片缩放</title>
      <link>http://venusplus.cn/about/image-resize/</link>
      <pubDate>Mon, 27 Feb 2017 09:47:43 +0000</pubDate>
      
      <guid>http://venusplus.cn/about/image-resize/</guid>
      <description>OSS 缩放模式  具体参数参考阿里云文档 文档
  原图: https://zos.alipayobjects.com/rmsportal/BNSTzzDxkYRdtFrtoEVA.jpg 缩放图: https://zos.alipayobjects.com/rmsportal/BNSTzzDxkYRdtFrtoEVA.jpg@100h.jpg   OSS 的缩放模式需要带上文件的后缀，否则默认为jpg。如果需要通用的缩放模式，则直接将后缀统一设置为 .src ，这样 OSS 会根据文件头自己判断，即使用如下方式:
  https://zos.alipayobjects.com/rmsportal/BNSTzzDxkYRdtFrtoEVA.jpg@100h.src</description>
    </item>
    
    <item>
      <title>简介</title>
      <link>http://venusplus.cn/about/intro/</link>
      <pubDate>Wed, 22 Feb 2017 04:20:49 +0000</pubDate>
      
      <guid>http://venusplus.cn/about/intro/</guid>
      <description>File 服务是一个基于 OSS 高度定制化的文件上传服务，通过 File 你可以不用关心底层 oss/cdn 等各种存储问题，实现文件上传的开箱即用。
 File 的优势  底层完全基于 OSS/CDN，高性能、搞可靠性，CDN QPS 日常百万+，满足所有业务需求。 丰富的接口形式，提供对文件的多环境、精细化操作。   File 的工作原理 写文件
读文件</description>
    </item>
    
  </channel>
</rss>